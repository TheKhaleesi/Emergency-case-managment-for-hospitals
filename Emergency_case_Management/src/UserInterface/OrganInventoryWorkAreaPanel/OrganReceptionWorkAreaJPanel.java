/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.OrganInventoryWorkAreaPanel;

import Business.Business;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.OrganWorkQueue.GetOrganWorkRequest;
import Business.Organisation.DoctorOrganization;
import Business.Organisation.OrganInventoryCollectionOrganization;
import Business.Organisation.OrganInventoryReceptionOrganization;
import Business.Organisation.Organization;
import Business.RequestBloodWorkQueue.RequestBloodFromDoctorWorkRequest;
import Business.RequestOrganByDoctorWorkArea.RequestOrganFromDoctorWorkRequest;
import Business.RequestOrganByDoctorWorkArea.RequestOrganWorkRequest;
import Business.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author puja_
 */
public class OrganReceptionWorkAreaJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private OrganInventoryReceptionOrganization organInventoryReceptionOrganization;
    private UserAccount account;
    private Enterprise enterprise;
    private Organization organization;
    //private GetOrganWorkRequest organrequest;
    private RequestOrganWorkRequest request;
    Business business;

    /**
     * Creates new form OrganReceptionWorkAreaJPanel
     */
    public OrganReceptionWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, OrganInventoryReceptionOrganization organInventoryReceptionOrganization, Enterprise enterprise, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account= account;
        this.enterprise= enterprise;
        this.business = business;
        this.organInventoryReceptionOrganization= organInventoryReceptionOrganization;
        
        populateTable();
        populateCollectionTable();
        
    
    }
    
    public void populateTable(){
         DefaultTableModel model1 = (DefaultTableModel) organrequestJTable.getModel();
         model1.setRowCount(0);
         
         for(RequestOrganWorkRequest rowr : organInventoryReceptionOrganization.getReceiveOrganRequestFromDoctor().getOrganWorkRequestList()){
             Object[] row = new Object[6];
             row[0] = rowr;
             row[1] = rowr.getOrganType();
             row[2] = rowr.getBloodType();
             row[3] = rowr.getQty();
             row[4] = rowr.getSender();
             row[5] = rowr.getStatus();
              model1.addRow(row);
         }
    }
    
    public void populateCollectionTable(){
        
        DefaultTableModel model1 = (DefaultTableModel) raisedforInventoryJTable.getModel();

        model1.setRowCount(0);
        
        for(Organization organization :enterprise.getOrganizationDirectory().getOrganizationList()){
            if(organization instanceof OrganInventoryReceptionOrganization){
                 for(RequestOrganWorkRequest gofc :organization.getReceiveOrganRequestFromDoctor().getOrganWorkRequestList()){
                     
                       if(gofc.getStatus().equals("Sent from Inventory to reception")){
                            Object[] row = new Object[7];
                            row[0] = gofc;
                            row[1] = gofc.getOrganType();
                            row[2] = gofc.getBloodType();
                            row[3] = gofc.getQty();
                            row[4] = gofc.getStatus();
                            row[5] = gofc.getSender();
                            row[6] = gofc.getReceiver();
            
                            model1.addRow(row);
                           
                       }
                     
                 }
            }
        }
        
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organrequestJTable = new javax.swing.JTable();
        requestorganBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        raisedforInventoryJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        senttoDocBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(222, 248, 248));

        organrequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Organ Type", "Blood Type", "Quantity Needed", "Sender", "Status"
            }
        ));
        jScrollPane1.setViewportView(organrequestJTable);

        requestorganBtn.setText("Send Request to Inventory");
        requestorganBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestorganBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Organ Inventory Reception");

        raisedforInventoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Organ Type", "Blood Type", "Quantity Needed", "Status", "Sender", "Receiver"
            }
        ));
        jScrollPane2.setViewportView(raisedforInventoryJTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Request Raised for Organ Inventory:");

        senttoDocBtn.setText("Send To Doctor");
        senttoDocBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senttoDocBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(requestorganBtn)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(310, 310, 310)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(142, 142, 142)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(senttoDocBtn))))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel2)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(requestorganBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(senttoDocBtn)
                .addGap(90, 90, 90))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void requestorganBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestorganBtnActionPerformed
        // TODO add your handling code here:
    int selectedRow = organrequestJTable.getSelectedRow();
    if(selectedRow < 0)
    {
        JOptionPane.showMessageDialog(null,"No Request Selected");
         return;
    }

    RequestOrganWorkRequest rowr = (RequestOrganFromDoctorWorkRequest)organrequestJTable.getModel().getValueAt(selectedRow, 0);
    rowr.setStatus("Sent to Organ Request Collection");
    JOptionPane.showMessageDialog(null, "Organ request has been sent to Inventory");
    populateCollectionTable();
        
    }//GEN-LAST:event_requestorganBtnActionPerformed

    private void senttoDocBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senttoDocBtnActionPerformed

int selectedRow = raisedforInventoryJTable.getSelectedRow();
if(selectedRow < 0)
{
    JOptionPane.showMessageDialog(null,"No Request Selected");
    return;
}
RequestOrganFromDoctorWorkRequest rofd = (RequestOrganFromDoctorWorkRequest)raisedforInventoryJTable.getModel().getValueAt(selectedRow, 0);

for(Network network: business.getNetworkList() )
{
   for(Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList())
   {
       if(enterprise instanceof HospitalEnterprise)
       {
           for(Organization organization: enterprise.getOrganizationDirectory().getOrganizationList())
           {
               if(organization instanceof DoctorOrganization)
               {
                    
        rofd.setSender(account);
        rofd.setStatus("Organ received by doctor");
        rofd.getGdwr().setStatus("Organ received by doctor");
               }
           }
       }
   }
}

DefaultTableModel model1 = (DefaultTableModel) raisedforInventoryJTable.getModel();
model1.removeRow(selectedRow);


        // TODO add your handling code here:
    }//GEN-LAST:event_senttoDocBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable organrequestJTable;
    private javax.swing.JTable raisedforInventoryJTable;
    private javax.swing.JButton requestorganBtn;
    private javax.swing.JButton senttoDocBtn;
    // End of variables declaration//GEN-END:variables
}
