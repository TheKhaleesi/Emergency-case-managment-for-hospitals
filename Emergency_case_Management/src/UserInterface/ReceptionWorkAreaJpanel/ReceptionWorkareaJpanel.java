/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ReceptionWorkAreaJpanel;

import Business.Enterprise.Enterprise;
import Business.Organisation.DoctorOrganization;
import Business.Organisation.Organization;
//import Business.Organisation.DoctorOrganization;
import Business.Organisation.ReceptionOrganization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import UserInterface.ReceptionWorkAreaJpanel.AddPatientJPanel;
import Business.DoctorWorkQueue.WorkRequest;
import Business.DoctorWorkQueue.GetDoctorWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mrunal
 */
public class ReceptionWorkareaJpanel extends javax.swing.JPanel {

    /**
     * Creates new form ReceptionWorkareaJpanel
     */
     private JPanel userProcessContainer;
    private UserAccount userAccount;
    private ReceptionOrganization receptionOrganization;
    private Enterprise enterprise;
    public ReceptionWorkareaJpanel(JPanel userProcessContainer, UserAccount account, ReceptionOrganization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.receptionOrganization = organization;
        this.enterprise = enterprise;
        valueLbl.setText(enterprise.getName());
        populateTypeTable();
        populatePatientHistory();
        
    }
    
    public void populateTypeTable(){
        
        
        
        
        DefaultTableModel model = (DefaultTableModel) patientJTable1.getModel();
        model.setRowCount(0);
        
        
        
        for (WorkRequest req : userAccount.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
           row[0] = req.getPatientName();
            row[1] = req.getReceiver();
            row[2] = req.getStatus();
            row[3] = req.getCastType();
          String diagnosis = ((GetDoctorWorkRequest) req).getDiagnosis();
             row[4] = diagnosis;
            
            model.addRow(row);
            
        }


        
    }
    
    public void populatePatientHistory()
    {
        DefaultTableModel model1 = (DefaultTableModel) patientHistory.getModel();
        model1.setRowCount(0);
        for(Patient patient: enterprise.getPatientDirectory().getPatientList())
        {
            Object[] row = new Object[4];
            row[0] = patient.getName();
            row[1] = patient.getAge();
            row[2] = patient.getGender();
            row[3] = patient.getCaseType();
            model1.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entertypeBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        valueLbl = new javax.swing.JLabel();
        refreshBtn = new javax.swing.JButton();
        addPatientHistory = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        patientJTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        patientHistory = new javax.swing.JTable();

        setBackground(new java.awt.Color(222, 248, 248));

        entertypeBtn.setText("Send patient to Doctor");
        entertypeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entertypeBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Enterprise:");

        valueLbl.setText("<value>");

        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        addPatientHistory.setText("Add Patient History");
        addPatientHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientHistoryActionPerformed(evt);
            }
        });

        patientJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Reciever", "Status", "Case Type", "Diagnosis"
            }
        ));
        jScrollPane2.setViewportView(patientJTable1);

        patientHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Gender", "Case Type"
            }
        ));
        jScrollPane3.setViewportView(patientHistory);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(valueLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshBtn)
                .addGap(102, 102, 102))
            .addGroup(layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addPatientHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 466, Short.MAX_VALUE)
                        .addComponent(entertypeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(valueLbl)
                    .addComponent(refreshBtn))
                .addGap(41, 41, 41)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(entertypeBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(addPatientHistory)))
                .addGap(67, 67, 67))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void entertypeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entertypeBtnActionPerformed



int selectedRow = patientHistory.getSelectedRow();
if(selectedRow < 0)
{
    JOptionPane.showMessageDialog(null,"No patient Selected");
    return;
}

    GetDoctorWorkRequest doctorWorkRequest = new GetDoctorWorkRequest();
    doctorWorkRequest.setSender(userAccount);
    doctorWorkRequest.setStatus("sent");
    String name = patientHistory.getModel().getValueAt(selectedRow,0).toString();
    doctorWorkRequest.setPatientName(name);
    int age = Integer.parseInt(patientHistory.getModel().getValueAt(selectedRow,1).toString());
    doctorWorkRequest.setPatientAge(age);
    String gender = patientHistory.getModel().getValueAt(selectedRow,2).toString();
    doctorWorkRequest.setPatientGender(gender);
    String caseType =  patientHistory.getModel().getValueAt(selectedRow,3).toString();
    doctorWorkRequest.setCastType(caseType);
    JOptionPane.showMessageDialog(null,"Patient request sent to doctor");
    
    
    Organization org = null;

for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList())
{
 if(organization instanceof DoctorOrganization)
 {
     org = organization;
     break;
 }
}

if(org!=null)
{
    org.getWorkQueue().getWorkRequestList().add(doctorWorkRequest);
    userAccount.getWorkQueue().getWorkRequestList().add(doctorWorkRequest);
}
    

        
    }//GEN-LAST:event_entertypeBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        populateTypeTable();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void addPatientHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientHistoryActionPerformed
 AddPatientJPanel addPatientJPanel = new AddPatientJPanel(userProcessContainer, userAccount, enterprise);
        userProcessContainer.add("addPatientJapnel", addPatientJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

        // TODO add your handling code here:
    }//GEN-LAST:event_addPatientHistoryActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPatientHistory;
    private javax.swing.JButton entertypeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable patientHistory;
    private javax.swing.JTable patientJTable1;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JLabel valueLbl;
    // End of variables declaration//GEN-END:variables
}
