
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorWorkAreaPanel;

import Business.Business;
import Business.DoctorWorkQueue.GetDoctorWorkRequest;
//import Business.RequestBloodWorkQueue.GetBloodWorkRequest;
import Business.Enterprise.BloodBankEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organisation.BloodbankReceptionOrganization;
import Business.Organisation.DoctorOrganization;
import Business.Organisation.Organization;
import Business.RequestBloodWorkQueue.ReceiveRequestFromDoctorWorkQueue;
import Business.RequestBloodWorkQueue.RequestBloodFromDoctorWorkRequest;
import Business.RequestBloodWorkQueue.RequestBloodWorkRequest;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mrunal
 */
public class ProcessingRequestByDoctorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProcessingRequestByDoctorJPanel
     */
    JPanel userProcessContainer;
    GetDoctorWorkRequest request;
    UserAccount account;
    Business business;
    DoctorOrganization docOrganization;
   
    public ProcessingRequestByDoctorJPanel(JPanel userProcessContainer, UserAccount account,GetDoctorWorkRequest request,Business business,Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.account = account;
        this.business = business;
        this.docOrganization = (DoctorOrganization)organization;
       populateTable();
       
       
    }
    
    public void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel)processing.getModel();
        
        model.setRowCount(0);
        
        
            Object[] row = new Object[6];
            row[0] = request;
            row[1] = request.getPatientName();
            row[2] = request.getPatientAge();
            row[3] = request.getPatientGender();
            row[4] = request.getCastType();
//            row[4] = request.getSender().getEmployee().getName();
//            row[5] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[5] = request.getStatus();
           
            
            
            model.addRow(row);
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestBlood = new javax.swing.JButton();
        BloodTypeJComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        bloodQuantity = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        processing = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        requestBlood.setBackground(new java.awt.Color(0, 153, 153));
        requestBlood.setForeground(new java.awt.Color(255, 255, 255));
        requestBlood.setText("Request Blood");
        requestBlood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestBloodActionPerformed(evt);
            }
        });

        BloodTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+ve", "B+ve", "O+ve", "AB-ve", "AB+ve", "A-ve", "B-ve" }));

        jLabel1.setText("Quantity: ");

        processing.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "request", "Patient Name", "Patient Age", "Patient Gender", "Case Type", "Status"
            }
        ));
        jScrollPane1.setViewportView(processing);

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ObjectModel/back.png"))); // NOI18N
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Bottles");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(requestBlood, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(BloodTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bloodQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 916, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(BloodTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bloodQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(requestBlood, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(185, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void requestBloodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestBloodActionPerformed

        int selectedRow = processing.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"No patient selected");
            return;
        }
        
        
        RequestBloodFromDoctorWorkRequest rbwr = new RequestBloodFromDoctorWorkRequest();
        rbwr.setGdwr(request);
        rbwr.setPatienName(processing.getModel().getValueAt(selectedRow, 1).toString());
        rbwr.setSender(account);
        rbwr.setStatus("Request sent to Blood rep");
        rbwr.setBloodType((String)BloodTypeJComboBox.getSelectedItem());
        rbwr.setQty(Integer.parseInt(bloodQuantity.getText()));
        
        

        Organization org = null;
for(Network network : business.getNetworkList())
{
    for(Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList())
    {
        if(enterprise instanceof BloodBankEnterprise)
        {
            for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList())
            {
                if(organization instanceof BloodbankReceptionOrganization)
                {
                  
     org = organization;
     break;
                }
            }
        }
    }
}

if(org!=null)
{
    org.getReceiverRequestFromDoctor().getWorkRequestList().add(rbwr);
    account.getReceiverRequestFromDoctor().getWorkRequestList().add(rbwr);
    JOptionPane.showMessageDialog(null,"Request for blood sent to Blood Banks");
    
}


        // TODO add your handling code here:
    }//GEN-LAST:event_requestBloodActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);        // TODO add your handling code here:
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BloodTypeJComboBox;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField bloodQuantity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable processing;
    private javax.swing.JButton requestBlood;
    // End of variables declaration//GEN-END:variables
}

